chapter_title: Surveillance Epidemiology and End Results

lodown_password_parameters: , \\\\n\\\\tyour_username = "username" , \\\\n\\\\tyour_password = "password"
get_catalog_password_parameters: , \\\\n\\\\t\\\\tyour_username = "username" , \\\\n\\\\t\\\\tyour_password = "password"


~~~{dataset_introduction}
The Surveillance Epidemiology and End Results (SEER) aggregates person-level information for more than a quarter of cancer incidence in the United States.
~~~
table_structure: * A series of both individual- and population-level tables, grouped by site of cancer diagnosis.

generalizable_population: * A registry covering various geographies across the US population, standardized by SEER*Stat to produce nationally-representative estimates.

publication_period: * Updated every spring based on the previous November's submission of data.

administrative_organization: * Maintained by the United States [National Cancer Institute (NCI)](http://www.cancer.gov/)


~~~{analysis_examples_loading_block}
library(DBI)
dbdir <- file.path( path.expand( "~" ) , "CHAPTER_TAG" , "SQLite.db" )
db <- dbConnect( RSQLite::SQLite() , dbdir )
~~~

sql_tablename: npi

~~~{variable_recoding_block}
dbSendQuery( db , "ALTER TABLE sql_tablename ADD COLUMN individual INTEGER" )

dbSendQuery( db , 
	"UPDATE sql_tablename 
	SET individual = 
		CASE WHEN entity_type_code = 1 THEN 1 ELSE 0 END" 
)

dbSendQuery( db , "ALTER TABLE sql_tablename ADD COLUMN provider_enumeration_year INTEGER" )

dbSendQuery( db , 
	"UPDATE sql_tablename 
	SET provider_enumeration_year = 
		CAST( SUBSTRING( provider_enumeration_date , 7 , 10 ) AS INTEGER )" 
)
~~~

group_by_variable: provider_gender_code
linear_variable: provider_enumeration_year
categorical_variable: is_sole_proprietor
subset_definition: provider_business_practice_location_address_state_name = 'CA'
subset_definition_description: California
binary_variable: individual
needs_dplyr_block: yes






~~~{replication_example_block}
---

## Replication Example {-}

```{r eval = FALSE , results = "hide" }
dbGetQuery( db , "SELECT COUNT(*) FROM sql_tablename" )
```

~~~


needs_travis_build_status_line: yes

~~~{machine_specific_replacements_block}
machine_specific_replacements <- 
	list( 
		
		# replace the folder path on macnix
		c( 'path.expand( \"~\" ) , \"CHAPTER_TAG\"' , 'getwd()' ) ,
		
		# change other things in the script to be run
		c( "hello" , "howdy" ) ,
		
		c( '"username"' , 'my_username' ) ,
		
		c( '"password"' , 'my_password' )
		
	)
~~~

~~~{environment_variables_block}
my_username <- Sys.getenv( "my_username" )
my_password <- Sys.getenv( "my_password" )
~~~
